parameters:
  name: ""
  displayName: ""
  arch: ""
  os: ""
  clusterType: ""
  clusterName: ""
  vmSize: ""
  k8sVersion: ""
  windowsOsSku: ""
  os_version: ""
  scaleup: ""
  dependsOn: ""

stages:
  - template: e2e-cluster-template.yaml
    parameters:
      name: ${{ parameters.name }}
      displayName: ${{ parameters.displayName }}
      clusterType: ${{ parameters.clusterType }}
      clusterName: ${{ parameters.clusterName }}
      vmSize: ${{ parameters.vmSize }}
      k8sVersion: ${{ parameters.k8sVersion }}
      windowsOsSku: ${{ parameters.windowsOsSku }}
      dependsOn: ${{ parameters.dependsOn }}

  - stage: ${{ parameters.name }}
    displayName: E2E - ${{ parameters.displayName }}
    variables:
      GOPATH: "$(Agent.TempDirectory)/go" # Go workspace path
      GOBIN: "$(GOPATH)/bin" # Go binaries path
      modulePath: "$(GOPATH)/src/github.com/Azure/azure-container-networking"
      dropgzVersion: $[ stagedependencies.setup.env.outputs['EnvironmentalVariables.dropgzVersion'] ]
      cniVersion: $[ stagedependencies.setup.env.outputs['EnvironmentalVariables.cniVersion'] ]
    dependsOn:
    - setup
    - publish
    - ${{ parameters.clusterName }}
    jobs:
      - job: ${{ parameters.name }}
        displayName: Singletenancy AKS - (${{ parameters.name }})
        pool:
          name: $(BUILD_POOL_NAME_DEFAULT)
          demands:
          - agent.os -equals Linux
          - Role -equals $(CUSTOM_E2E_ROLE)
        steps:
          - template: e2e-step-template.yaml
            parameters:
              name: ${{ parameters.name }}
              clusterType: ${{ parameters.clusterType }}
              clusterName: ${{ parameters.clusterName }}
              vmSize: ${{ parameters.vmSize }}
              arch: ${{ parameters.arch }}
              os: ${{ parameters.os }}
              k8sVersion: ${{ parameters.k8sVersion }}
              windowsOsSku: ${{ parameters.windowsOsSku }}
              os_version: ${{ parameters.os_version }}
              version: $(dropgzVersion)
              cniVersion: $(cniVersion)
              scaleup: ${{ parameters.scaleup }}

      - template: ../../cni/k8s-e2e/k8s-e2e-job-template.yaml
        parameters:
          sub: $(AZURE_TEST_AGENT_SERVICE_CONNECTION)
          clusterName: ${{ parameters.clusterName }}
          os: ${{ parameters.os }}
          datapath: true
          dns: true
          portforward: true
          hybridWin: true
          service: true
          hostport: true
          dependsOn: ${{ parameters.name }}

      - job: cleanup
        displayName: "Cleanup"
        dependsOn:
        - ${{ parameters.name }}
        - "cni_k8se2e"
        pool:
          name: $(BUILD_POOL_NAME_DEFAULT)
        condition: always()
        steps:
          - task: AzureCLI@1
            inputs:
              azureSubscription: $(AZURE_TEST_AGENT_SERVICE_CONNECTION)
              scriptLocation: "inlineScript"
              scriptType: "bash"
              addSpnToEnvironment: true
              inlineScript: |
                set -e
                echo "Deleting cluster"
                make -C ./hack/aks azcfg AZCLI=az REGION=$(REGION_AKS_CLUSTER_TEST)
                make -C ./hack/aks set-kubeconf AZCLI=az CLUSTER=${{ parameters.clusterName }}-$(make revision)
                make -C ./hack/aks down AZCLI=az REGION=$(REGION_AKS_CLUSTER_TEST) SUB=$(SUB_AZURE_NETWORK_AGENT_TEST) CLUSTER=${{ parameters.clusterName }}-$(make revision)
                echo "Cluster and resources down"
            displayName: "Delete test cluster"
